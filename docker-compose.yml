version: '3.8'

services:
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 manage.py migrate &&
             python3 manage.py test > ./logs/test.log &&
             python3 manage.py runserver 0.0.0.0:8000"

    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
#      - sqlite3

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
    command: >
      sh -c "npm install && npm run dev"
    depends_on:
      - backend

  db:
    image: postgres:14.6-alpine
    restart: always
    env_file:
      - ./.env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data

#  sqlite3:
#    image: nouchka/sqlite3:latest
#    restart: always
#    volumes:
#      - ./test.backend:/backend/test.sqlite3

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  redis:
    image: redis:alpine
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - ./sysctl.conf:/etc/sysctl.conf
  celery:
    restart: always
    build:
      context: ./backend
    command: celery -A backend worker -l info
    volumes:
      - ./backend:/backend
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - backend

volumes:
  pgdata:
#  test.sqlite3:
